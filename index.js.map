{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///./src/m_namespace.ts","webpack:///./src/c_namespace.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","M_Namespace","this","_global_namespace","Error","C_Namespace","E_CalledBeforeDeclaration","namespace","get_GlobalNamespace","produce_Stack","global_namespace","undefined","E_AlreadyDefined","check_NamespaceInput","_local_namespace","get_LocalNamespace","local_namespace","length","E_NoEmpty","split","NamespaceSeparator"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export { M_Namespace } from \"./m_namespace\";\r\nexport { t_namespace } from \"./t_namespace\";","\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport { t_namespace } from \"./t_namespace\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport { C_Namespace } from \"./c_namespace\";\r\n\r\n/**\r\n * Provides namespace functionality to classes\r\n *\r\n * @remarks\r\n * Service: Namespace\r\n * */\r\nexport abstract class M_Namespace {\r\n\r\n    private _global_namespace!: string;\r\n    private _local_namespace!: string;\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tHANDLE GLOBAL NAMESPACE\r\n */\r\n\r\n    /**\r\n     * Returns the namespace for the class\r\n     *\r\n     * @remarks\r\n     * Class: M_Namespace\r\n     * Service: Namespace\r\n     * */\r\n    public get_GlobalNamespace(): t_namespace {\r\n\r\n        if (!this._global_namespace) {\r\n            throw new Error(C_Namespace.E_CalledBeforeDeclaration)\r\n        }\r\n\r\n        return this._global_namespace;\r\n    }\r\n\r\n    /**\r\n     * Returns steps of the global namespace\r\n     * */\r\n    public get_GlobalNamespaceStack(): t_namespace[] {\r\n        const namespace = this.get_GlobalNamespace();\r\n        return this.produce_Stack(namespace);\r\n    }\r\n\r\n    /**\r\n     * Sets namespace for the class\r\n     * \r\n     * @param global_namespace\r\n     *\r\n     * @remarks\r\n     * Class: M_Namespace\r\n     * Service: Namespace\r\n     */\r\n    protected set_GlobalNamespace(global_namespace: t_namespace): this {\r\n\r\n        if (this._global_namespace !== undefined) {\r\n            throw new Error(C_Namespace.E_AlreadyDefined);\r\n        }\r\n\r\n        this.check_NamespaceInput(global_namespace);\r\n\r\n        this._global_namespace = global_namespace;\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE LOCAL NAMESPACE\r\n */\r\n\r\n    /**\r\n     * Returns local namespace of the class\r\n     *\r\n     * @remarks\r\n     * Class: M_Namespace\r\n     * Service: Namespace\r\n     * */\r\n    public get_LocalNamespace(): t_namespace {\r\n\r\n        if (!this._local_namespace) {\r\n            throw new Error(C_Namespace.E_CalledBeforeDeclaration)\r\n        }\r\n\r\n        return this._local_namespace;\r\n    }\r\n\r\n    /**\r\n     * Returns steps of the global namespace\r\n     * */\r\n    public get_LocalNamespaceStack(): t_namespace[] {\r\n        const namespace = this.get_LocalNamespace();\r\n        return this.produce_Stack(namespace);\r\n    }\r\n\r\n    /**\r\n     * Sets local namespace for the class\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: M_Namespace\r\n     * Service: Namespace\r\n     */\r\n    protected set_LocalNamespace(local_namespace: t_namespace): void {\r\n\r\n        if (this._local_namespace) {\r\n            throw new Error(C_Namespace.E_AlreadyDefined);\r\n        }\r\n\r\n        this.check_NamespaceInput(local_namespace);\r\n\r\n        this._local_namespace = local_namespace;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the class has a local namespace defined\r\n     *\r\n     * @remarks\r\n     * Class: M_Namespace\r\n     * Service: Namespace\r\n     * */\r\n    public has_LocalNamespace(): boolean {\r\n        return this._local_namespace !== undefined\r\n            && this._local_namespace !== null;\r\n    }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tCHECK LEGALITY\r\n */\r\n\r\n    /**\r\n     *  Throws error if the namespace parameter is undefined \r\n     *  or has length of zero\r\n     *  \r\n     * @param namespace\r\n     */\r\n    private check_NamespaceInput(namespace: t_namespace): void {\r\n        if (namespace === undefined || namespace.length === 0) {\r\n            throw new Error(C_Namespace.E_NoEmpty)\r\n        }\r\n    }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE STACKING\r\n */\r\n\r\n    /**\r\n     * Splits the namespace into its steps\r\n     * \r\n     * @param namespace\r\n     */\r\n    private produce_Stack(namespace: t_namespace): Array<t_namespace> {\r\n        return namespace.split(C_Namespace.NamespaceSeparator);\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport { t_namespaceGenericObject } from \"./t_namespace\";\r\n\r\n/**\r\n * Contains all the constants used in the package\r\n * \r\n * @remarks\r\n * Package: Namespace\r\n * */\r\nexport const C_Namespace: t_namespaceGenericObject = {\r\n    E_AlreadyDefined: \"%1 Namespace already defined\",\r\n    E_CalledBeforeDeclaration: \"%1 Namespace called before declaration\",\r\n    E_NoEmpty: \"%1 Namespace declaration cannot be empty\",\r\n    NamespaceSeparator: \"/\",\r\n}"],"sourceRoot":""}